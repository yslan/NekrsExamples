C
C  USER SPECIFIED ROUTINES: 
C
C     - boundary conditions 
C     - initial conditions  
C     - variable properties 
C     - forcing function for fluid (f)
C     - forcing function for passive scalar (q)
C     - general purpose routine for checking errors etc.        
C
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      ux   = 0.0  
      uy   = 0.0 
      uz   = 0.0

      if (ifield.eq.2) then
         temp = 1.0
      elseif (ifield.eq.3) then
         temp = 0.01
      elseif (ifield.eq.4) then
         temp = 0.1
      endif
      
      return
      end
c-----------------------------------------------------------------------
      subroutine userchk
      include 'SIZE'
      include 'TOTAL'
      
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat   ! This routine to modify element vertices
      include 'SIZE'      ! _before_ mesh is generated, which 
      include 'TOTAL'     ! guarantees GLL mapping of mesh.

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2()  ! This routine to modify mesh coordinates
      include 'SIZE'
      include 'TOTAL'

      parameter(BETAM = 2.8)

      del = 0.1
      call rescale_x(xm1, 0.0,8.0+del)
      call rescale_x(ym1,-1.0,0.0)
      call rescale_x(zm1, 0.0,1.0)

      ntot = nx1*ny1*nz1*nelt

      do i=1,ntot
         ym1(i,1,1,1) = tanh(BETAM*ym1(i,1,1,1))/tanh(BETAM)
      enddo

      do iel=1,nelt
      do ifc=1,2*ndim
         boundaryID(ifc,iel) = 0
         boundaryIDt(ifc,iel) = 0
         cbc(ifc,iel,2) = 'E  ' 
         cbc(ifc,iel,3) = 'E  ' 
         cbc(ifc,iel,4) = 'E  ' 
         if (cbc(ifc,iel,1) .eq. 'v  ') then
           cbc(ifc,iel,2) = 't  ' 
           cbc(ifc,iel,3) = 't  ' 
           cbc(ifc,iel,4) = 't  ' 
           boundaryID(ifc,iel) = 1
           boundaryIDt(ifc,iel) = 1
         elseif (cbc(ifc,iel,1) .eq. 'int') then 
           cbc(ifc,iel,2) = 'int' 
           cbc(ifc,iel,3) = 'int' 
           cbc(ifc,iel,4) = 'int' 
           boundaryID(ifc,iel) = 2
           boundaryIDt(ifc,iel) = 2
         elseif (cbc(ifc,iel,1) .eq. 'W  ') then
           cbc(ifc,iel,2) = 't  ' 
           cbc(ifc,iel,3) = 't  ' 
           cbc(ifc,iel,4) = 't  ' 
           boundaryID(ifc,iel) = 3
           boundaryIDt(ifc,iel) = 3
         elseif (cbc(ifc,iel,1) .eq. 'SYM') then
           cbc(ifc,iel,2) = 'I  ' 
           cbc(ifc,iel,3) = 'I  ' 
           cbc(ifc,iel,4) = 'I  ' 
           boundaryID(ifc,iel) = 4
           boundaryIDt(ifc,iel) = 4
         elseif (cbc(ifc,iel,1) .eq. 'P  ') then
         elseif (cbc(ifc,iel,1) .eq. 'E  ') then
         endif
c         cbc(5,iel,1) = 'P  '
c         cbc(5,iel,2) = 'P  '
c         cbc(5,iel,3) = 'P  '
c         cbc(5,iel,4) = 'P  '
c         cbc(6,iel,1) = 'P  '
c         cbc(6,iel,2) = 'P  '
c         cbc(6,iel,3) = 'P  '
c         cbc(6,iel,4) = 'P  '
      enddo
      enddo

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      include 'SIZE'
      include 'TOTAL'
            
      return
      end
c-----------------------------------------------------------------------
